basePath: /
definitions:
  entities.UserRequest:
    properties:
      cpf:
        description: |-
          User's CPF.
          @json
          @jsonTag cpf
          @jsonExample 000.000.000-00
        example: 000.000.000-00
        maxLength: 14
        minLength: 11
        type: string
      dataNascimento:
        description: |-
          User's dataNascimento (required, must be between 1 and 100).
          @json
          @jsonTag dataNascimento
          @jsonExample 30/03/2003
        example: 30/03/2003
        maxLength: 10
        minLength: 8
        type: string
      email:
        description: |-
          User's email (required and must be a valid email address).
          Example: user@example.com
          @json
          @jsonTag email
          @jsonExample user@example.com
          @binding required,email
        example: test@test.com
        type: string
      endereco:
        description: |-
          User's endereco.
          @json
          @jsonTag endereco
          @jsonExample Rua Francisco Matos, 131
          @binding required,min=3,max=100
        maxLength: 100
        minLength: 3
        type: string
      idade:
        description: |-
          User's idade (required, must be between 1 and 100).
          @json
          @jsonTag idade
          @jsonExample 30
        example: "30"
        maxLength: 100
        minLength: 1
        type: string
      matricula:
        description: |-
          User's matricula.
          @json
          @jsonTag matricula
          @jsonExample 012345678
        example: "012345678"
        maxLength: 10
        minLength: 8
        type: string
      nome:
        description: |-
          User's name (required, minimum of 4 characters, maximum of 100 characters).
          @json
          @jsonTag name
          @binding required,min=4,max=100
        maxLength: 100
        minLength: 4
        type: string
      sexo:
        description: |-
          User's
          @json
          @jsonTag sexo
          @jsonExample F
          @binding required,sexo
        example: F
        type: string
      sobrenome:
        description: |-
          User's sobrenome (required, minimum of 4 characters, maximum of 100 characters).
          @json
          @jsonTag sobrenome
          @binding required,min=4,max=100
        maxLength: 100
        minLength: 4
        type: string
      telefone:
        description: |-
          User's telefone.
          @json
          @jsonTag telefone
          @jsonExample 48988881111
        example: "48988881111"
        maxLength: 11
        minLength: 8
        type: string
    required:
    - cpf
    - dataNascimento
    - email
    - endereco
    - idade
    - matricula
    - nome
    - sexo
    - sobrenome
    - telefone
    type: object
  entities.Users:
    properties:
      cpf:
        type: string
      dataNascimento:
        type: string
      email:
        type: string
      endereco:
        type: string
      id:
        type: string
      idade:
        type: string
      matricula:
        type: string
      nome:
        type: string
      sexo:
        type: string
      sobrenome:
        type: string
      telefone:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: Realiza CRUD de usuarios
  title: API GestorEdu
  version: "2.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Faz a criação de usuários
      parameters:
      - description: dados do usuario
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/entities.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
        "400":
          description: error
      summary: Criar usuários
      tags:
      - Usuários
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Deleta usuário por ID
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
      summary: Deletar usuários
      tags:
      - Usuários
    get:
      consumes:
      - application/json
      description: Faz a busca de usuários por ID
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
      summary: Buscar usuários
      tags:
      - Usuários
    patch:
      consumes:
      - application/json
      description: Atualiza dados do usuário por ID
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
      summary: Atualizar usuários
      tags:
      - Usuários
schemes:
- http
swagger: "2.0"
